# Generated by Neurodocker and Reproenv.

FROM ubuntu:jammy
RUN apt-get update -qq \
           && apt-get install -y -q --no-install-recommends \
                  git wget make \
           && rm -rf /var/lib/apt/lists/*
RUN mkdir -p /home/neuro/bidsMReye/models
WORKDIR /home/neuro/bidsMReye
RUN wget -q https://osf.io/download/cqf74/ -O models/dataset1_guided_fixations.h5
RUN wget -q https://osf.io/download/4f6m7/ -O models/dataset2_pursuit.h5
RUN wget -q https://osf.io/download/8cr2j/ -O models/dataset3_openclosed.h5
RUN wget -q https://osf.io/download/e89wp/ -O models/dataset3_pursuit.h5
RUN wget -q https://osf.io/download/96nyp/ -O models/dataset4_pursuit.h5
RUN wget -q https://osf.io/download/89nky/ -O models/dataset5_free_viewing.h5
RUN wget -q https://osf.io/download/23t5v/ -O models/dataset_1to5.h5
RUN wget -q https://osf.io/download/mr87v/ -O models/dataset_1to6.h5
COPY [".", \
      "/home/neuro/bidsMReye"]
ENV CONDA_DIR="/opt/miniconda-latest" \
    PATH="/opt/miniconda-latest/bin:$PATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bzip2 \
           ca-certificates \
           curl \
    && rm -rf /var/lib/apt/lists/* \
    # Install dependencies.
    && export PATH="/opt/miniconda-latest/bin:$PATH" \
    && echo "Downloading Miniconda installer ..." \
    && conda_installer="/tmp/miniconda.sh" \
    && curl -fsSL -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash "$conda_installer" -b -p /opt/miniconda-latest \
    && rm -f "$conda_installer" \
    && conda update -yq -nbase conda \
    # Prefer packages in conda-forge
    && conda config --system --prepend channels conda-forge \
    # Packages in lower-priority channels not considered if a package with the same
    # name exists in a higher priority channel. Can dramatically speed up installations.
    # Conda recommends this as a default
    # https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html
    && conda config --set channel_priority strict \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    # Enable `conda activate`
    && conda init bash \
    && conda install -y  --name base \
           "python=3.10" \
           "pip" \
    && bash -c "source activate base \
    &&   python -m pip install --no-cache-dir  \
             "-e" \
             "."" \
    # Clean up
    && sync && conda clean --all --yes && sync \
    && rm -rf ~/.cache/pip/*
COPY ["./docker/entrypoint.sh", \
      "/neurodocker/startup.sh"]
RUN chmod +x /neurodocker/startup.sh

# Save specification to JSON.
RUN printf '{ \
  "pkg_manager": "apt", \
  "existing_users": [ \
    "root" \
  ], \
  "instructions": [ \
    { \
      "name": "from_", \
      "kwds": { \
        "base_image": "ubuntu:jammy" \
      } \
    }, \
    { \
      "name": "install", \
      "kwds": { \
        "pkgs": [ \
          "git wget make" \
        ], \
        "opts": null \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq \\\\\\n    && apt-get install -y -q --no-install-recommends \\\\\\n           git wget make \\\\\\n    && rm -rf /var/lib/apt/lists/*" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "mkdir -p /home/neuro/bidsMReye/models" \
      } \
    }, \
    { \
      "name": "workdir", \
      "kwds": { \
        "path": "/home/neuro/bidsMReye" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "wget -q https://osf.io/download/cqf74/ -O models/dataset1_guided_fixations.h5" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "wget -q https://osf.io/download/4f6m7/ -O models/dataset2_pursuit.h5" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "wget -q https://osf.io/download/8cr2j/ -O models/dataset3_openclosed.h5" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "wget -q https://osf.io/download/e89wp/ -O models/dataset3_pursuit.h5" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "wget -q https://osf.io/download/96nyp/ -O models/dataset4_pursuit.h5" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "wget -q https://osf.io/download/89nky/ -O models/dataset5_free_viewing.h5" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "wget -q https://osf.io/download/23t5v/ -O models/dataset_1to5.h5" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "wget -q https://osf.io/download/mr87v/ -O models/dataset_1to6.h5" \
      } \
    }, \
    { \
      "name": "copy", \
      "kwds": { \
        "source": [ \
          ".", \
          "/home/neuro/bidsMReye" \
        ], \
        "destination": "/home/neuro/bidsMReye" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "CONDA_DIR": "/opt/miniconda-latest", \
        "PATH": "/opt/miniconda-latest/bin:$PATH" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    bzip2 \\\\\\n    ca-certificates \\\\\\n    curl\\nrm -rf /var/lib/apt/lists/*\\n# Install dependencies.\\nexport PATH=\\"/opt/miniconda-latest/bin:$PATH\\"\\necho \\"Downloading Miniconda installer ...\\"\\nconda_installer=\\"/tmp/miniconda.sh\\"\\ncurl -fsSL -o \\"$conda_installer\\" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\\nbash \\"$conda_installer\\" -b -p /opt/miniconda-latest\\nrm -f \\"$conda_installer\\"\\nconda update -yq -nbase conda\\n# Prefer packages in conda-forge\\nconda config --system --prepend channels conda-forge\\n# Packages in lower-priority channels not considered if a package with the same\\n# name exists in a higher priority channel. Can dramatically speed up installations.\\n# Conda recommends this as a default\\n# https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html\\nconda config --set channel_priority strict\\nconda config --system --set auto_update_conda false\\nconda config --system --set show_channel_urls true\\n# Enable `conda activate`\\nconda init bash\\nconda install -y  --name base \\\\\\n    \\"python=3.10\\" \\\\\\n    \\"pip\\"\\nbash -c \\"source activate base\\n  python -m pip install --no-cache-dir  \\\\\\n      \\"-e\\" \\\\\\n      \\".\\"\\"\\n# Clean up\\nsync && conda clean --all --yes && sync\\nrm -rf ~/.cache/pip/*" \
      } \
    }, \
    { \
      "name": "copy", \
      "kwds": { \
        "source": [ \
          "./docker/entrypoint.sh", \
          "/neurodocker/startup.sh" \
        ], \
        "destination": "/neurodocker/startup.sh" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "chmod +x /neurodocker/startup.sh" \
      } \
    } \
  ] \
}' > /.reproenv.json
# End saving to specification to JSON.
